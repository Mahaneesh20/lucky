#!/bin/bash
# ================================
# Git & GitHub Commands for Smart Assessment Hub
# Replace placeholders like <your-name>, <your-email>, <branch-name>, <repo-url>
# ================================

# 1. Configure Git
git config --global user.name "<your-name>"
git config --global user.email "<your-email>"

# 2. Initialize Git in project
cd /path/to/Smart-Assessment-Hub
git init

# 3. Add all files and commit
git add .
git commit -m "Added automated grading module"

# 4. Check status
git status

# 5. View commit history with author details
git log --pretty=fuller

# 6. Create a new branch
git checkout -b <feedback-module-branch>

# 7. Merge branch into main (resolve conflicts if any)
git checkout main
git merge <feedback-module-branch>
# If conflicts occur, manually resolve, then:
git add .
git commit -m "Resolved merge conflict"

# 8. Resolve merge conflict with another branch
git checkout main
git merge <report-module-branch>
# Resolve conflicts manually
git add .
git commit -m "Resolved merge conflict with report-module"

# 9. Create a patch file for last commit
git format-patch -1 <commit_id>

# 10. Apply a patch file
git apply <patchfile.patch>

# 11. Push branch to GitHub
git remote add origin https://github.com/<your-username>/<repo-name>.git
git push -u origin <branch-name>

# 12. Fork & pull request workflow (manual steps also required on GitHub)
git clone https://github.com/<your-username>/<forked-repo>.git
cd <forked-repo>
git checkout -b <new-feature-branch>
git add .
git commit -m "Implemented new feature"
git push origin <new-feature-branch>
# Then create Pull Request on GitHub UI

# 13. Check differences between local branch and remote main
git fetch origin
git diff main origin/main
